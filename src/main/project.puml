@startuml
'https://plantuml.com/class-diagram

Abstract class Application{
    +void start(Stage stage)
}

abstract class User {
  -String username
  -String password
  +String getUsername()
  +void setUsername(String username)
  +String getPassword()
  +void setPassword(String password)
  +boolean verify(String username, String password)

}
 interface Person {
        +{abstract} String getFirstName()
        +{abstract} void setFirstName(String)
        +{abstract} String getLastName()
        +{abstract} void setLastName(String)
        +{abstract} String getPhoneNumber()
        +{abstract} void setPhoneNumber(String)
        +{abstract} String getAddress()
        +{abstract} void setAddress(String)
  }

class Administrator
class Database {
    -Set<Student> studentList
    +boolean addStudent(String firstname, String lastname, String phoneNumber, String address, String major)
    +boolean removeStudent(int studentID)
    +Student getStudent(int studentID)
    +String listStudents()
    +boolean verify(String username, String password)
    -int generateID()
    +void loadData()
    -Student parseData(String[] data)
    +void saveData()
}

class Student {
  -static DEFAULT_PASSWORD
  -firstName: String
  -lastName: String
  -studentID: int
  -phoneNumber: String
  -address: String
  -major: String
  +generateStudentEmail(studentID: int): String
  +getStudentID(): int
  +getFirstName(): String
  +setFirstName(firstName: String): void
  +getLastName(): String
  +setLastName(lastName: String): void
  +getPhoneNumber(): String
  +setPhoneNumber(phoneNumber: String): void
  +getAddress(): String
  +setAddress(address: String): void
  +getMajor(): String
  +setMajor(major: String): void
  +toString(): String
  +equals(o: Object): boolean
  +hashCode(): int
}

class JavaFXApplication {
    +{static} void main(String[] args)
}
class JavaFXController {

    -TextField username
    -PasswordField password
    -TextField firstName
    -TextField lastName
    -TextField studentID
    -TextField phoneNumber
    -TextField address
    -TextField major
    -CheckBox isAdmin
    -Label message
    -Client client
    +void onLoginAction(ActionEvent event)
    +void onModifyAction(ActionEvent event)
    +void onRemoveAction(ActionEvent event)
    +void onAddAction(ActionEvent event)
    +void onListAction(ActionEvent event)
    +void onAddStudentAction(ActionEvent event)
    +void onRemoveStudentAction(ActionEvent event)
}
class Client {
  -Socket socket
  -BufferedReader in
  -PrintWriter out

  +void sendToServer(String message)
  +String readFromServer()
  +void close()
}
class Server {

    -ServerSocket serverSocket
    -Socket clientSocket
    -PrintWriter out
    -BufferedReader in
    -Database data
    -Administrator ad
    +void start(int port)
    +void stop()
    +{static} void main(String[] args)
}

Server -> Database
Server --> Administrator
Database "1" *-- "many" Student: studentList
Student --|> User : extends
Administrator --|> User : extends
Student --|> Person : implements
JavaFXApplication --|> Application : implements
JavaFXController --> Client
Client --> Server : requests
Client <-- Server : responses
@enduml